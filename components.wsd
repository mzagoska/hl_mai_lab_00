@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

AddElementTag("microService", $shape=EightSidedShape(), $bgColor="MediumSeaGreen", $fontColor="white", $legendText="microservice")
AddElementTag("storage", $shape=RoundedBoxShape(), $bgColor="LightGreen", $fontColor="white")
AddElementTag("person", $bgColor="Teal", $fontColor="white")

Person(admin, "Администратор")
Person(moderator, "Модератор")
Person(user, "Пользователь")

System_Ext(web_site, "Клиентский веб-сайт", "HTML, CSS, JavaScript, React", "Веб-интерфейс")
System_Ext(gos_usl, "Гос Услуги", "Центр аутентификации пользователей")

System_Boundary(socialnet_site, "Backend социальной сети") {
   Container(auth_service, "Сервис авторизации", "C++", "Сервис входа на страничку", $tags = "microService")  
   Container(client_service, "Сервис управления пользователями", "C++", "Сервис регистрации, авторизации, поиска пользователей", $tags = "microService")  
   Container(wall_service, "Сервис личной странички (стены)", "C++", "Сервис просмотра и управления записями на стене", $tags = "microService") 
   Container(messngr_service, "Сервис Р2Р мессенджера", "C++", "Сервис управления сообщениями", $tags = "microService")   
   ContainerDb(db, "База данных", "MySQL", "Хранение данных о пользователях, записях и переписках", $tags = "storage")
   ContainerDb(cache, "Кэш", "MySQL", "Хранение данных о пользователях, записях и переписках", $tags = "storage")
   
}

Rel(admin, web_site, "Просмотр, добавление и редактирование информации о пользователях, записях на стене и сообщениях")
Rel(moderator, web_site, "Модерация контента и пользователей")
Rel(user, web_site, "Регистрация, вход на страничку и поиск пользователей, просмотр и отправка сообщений, просмотр информации на стене, добавление записей на стену")


Rel(web_site, auth_service, "Работа с пользователями", "localhost/person")
Rel(auth_service, client_service, "Работа с пользователями: регистрация или вход", "")
client_service ..>> auth_service : Инфа о существовании пользователя и правильности входных данных, [JSON]



Rel(client_service, wall_service, "Работа с пользователями", "токен активной сессии, HTTP redirect 3XX")
Rel(client_service, db, "INSERT/SELECT/UPDATE", "SQL")
Rel_L(client_service, gos_usl, "Идентификация пользователей при регистрации", "JSON")
gos_usl ..>> client_service: Подтверждение регистрации пользователя, [JSON]


Rel(web_site, wall_service, "Работа с записями на стене", "localhost/wall")

Rel(wall_service, cache, "Запросить данные из Кэша для отображения", "")
cache .>> wall_service: Возврат данных при наличии в Кэше, [JSON]

Rel_D(cache , db, "INSERT/SELECT/UPDATE", "SQL")
db ..>> cache : [SQL]


Rel(web_site, messngr_service, "Работа с сообщениями", "localhost/messenger")
Rel(messngr_service, db, "INSERT/SELECT/UPDATE", "SQL")
@enduml
